try {
                if(con.isConnectedToInternet()){
                dreamyAccount dr = httphelper.findAccountByUserName(username);

                    if(username.equals("") || password.equals("")){
                        progressDialog.dismiss();
                        Looper.prepare();
                        MessageQueue queue = Looper.myQueue();
                        queue.addIdleHandler(new MessageQueue.IdleHandler() {
                            int mReqCount = 0;

                            @Override
                            public boolean queueIdle() {
                                if (++mReqCount == 2) {
                                    // Quit looper
                                    Looper.myLooper().quit();
                                    return false;
                                } else
                                    return true;
                            }
                        });

                        Toast.makeText(getApplicationContext(), "Enter Something Please!", Toast.LENGTH_SHORT).show();
                        Looper.loop();
                    }
                if (!username.equals("") && dr == null) {
                    progressDialog.dismiss();
                    Looper.prepare();
                    MessageQueue queue = Looper.myQueue();
                    queue.addIdleHandler(new MessageQueue.IdleHandler() {
                        int mReqCount = 0;

                        @Override
                        public boolean queueIdle() {
                            if (++mReqCount == 2) {
                                // Quit looper
                                Looper.myLooper().quit();
                                return false;
                            } else
                                return true;
                        }
                    });

                    Toast.makeText(getApplicationContext(), "Username does not exist!", Toast.LENGTH_SHORT).show();
                    Looper.loop();
                }

                if (dr != null) {
                    dreamyAccount acc = new dreamyAccount();
                    if(dreamyAccount.findByUsername(username) == null){
                        acc = dr;
                        acc.save();
                        Log.e("ID BELUM MASUK & GANTI", String.valueOf(acc.getId()));
                    }
                    else {
                        acc = dreamyAccount.findByUsername(username);
                    }

                    String userPass = acc.getPassword();
                    Log.e("ID DI DATABASE",String.valueOf(dreamyAccount.findByUsername(acc.getUsername()).getId()));
                    //String userID = acc.getUsername();
                    //String accessDate = acc.getAccessDate();
                    //Logs log = new Logs(userID,accessDate,userID);

                    //HttpHelper.POSTtoLogs(log);


                    Log.e("lol", acc.getUsername());
                    Log.e("pass", password);
                    Log.e("encpass", acc.getPassword());

                    if (authentication(password, userPass) == true) {
                        acc.updateLastAccess(acc, currentTimestamp);

                        session.createLoginSession(acc.getUsername(), acc.getId());
                        Log.e("ID MASUK SESSION", String.valueOf(acc.getId()));

                        new SendLogs().execute();

                        Intent intent = new Intent(LogIn.this, Main.class);
                        startActivity(intent);

                        finish();
                    }
                    else{
                        progressDialog.dismiss();
                        Looper.prepare();
                        MessageQueue queue = Looper.myQueue();
                        queue.addIdleHandler(new MessageQueue.IdleHandler() {
                            int mReqCount = 0;

                            @Override
                            public boolean queueIdle() {
                                if (++mReqCount == 2) {
                                    // Quit looper
                                    Looper.myLooper().quit();
                                    return false;
                                } else
                                    return true;
                            }
                        });

                        Toast.makeText(getApplicationContext(), "Invalid Password!", Toast.LENGTH_SHORT).show();
                        Looper.loop();
                    }
                }
                }else{
                    if(username.equals("") || password.equals("")){
                        progressDialog.dismiss();
                        Looper.prepare();
                        MessageQueue queue = Looper.myQueue();
                        queue.addIdleHandler(new MessageQueue.IdleHandler() {
                            int mReqCount = 0;

                            @Override
                            public boolean queueIdle() {
                                if (++mReqCount == 2) {
                                    // Quit looper
                                    Looper.myLooper().quit();
                                    return false;
                                } else
                                    return true;
                            }
                        });

                        Toast.makeText(getApplicationContext(), "Enter Something Please!", Toast.LENGTH_SHORT).show();
                        Looper.loop();
                    }
                    dreamyAccount dr = dreamyAccount.findByUsername(username);
                    if (!username.equals("") && dr == null) {
                        this.cancel(true);
                        progressDialog.dismiss();

                        Looper.prepare();
                        MessageQueue queue = Looper.myQueue();
                        queue.addIdleHandler(new MessageQueue.IdleHandler() {
                            int mReqCount = 0;

                            @Override
                            public boolean queueIdle() {
                                if (++mReqCount == 2) {
                                    // Quit looper
                                    Looper.myLooper().quit();
                                    return false;
                                } else
                                    return true;
                            }
                        });
                        Toast.makeText(getApplicationContext(), "Username does not exist in this Device!", Toast.LENGTH_SHORT).show();
                        Looper.loop();
                        Log.e("MASUK", "MASUK1");

                    }
                    if (dr != null) {
                        dreamyAccount acc;
                        acc = dr;
                        Log.e("MASUK", "MASUK2");
                        String userPass = acc.getPassword();
                        Log.e("ID DI DATABASE", String.valueOf(dreamyAccount.findByUsername(acc.getUsername()).getId()));
                        //String userID = acc.getUsername();
                        //String accessDate = acc.getAccessDate();
                        //Logs log = new Logs(userID,accessDate,userID);

                        //HttpHelper.POSTtoLogs(log);


                        Log.e("lol", acc.getUsername());
                        Log.e("pass", password);
                        Log.e("encpass", acc.getPassword());

                        if (authentication(password, userPass) == true) {
                            acc.updateLastAccess(acc, currentTimestamp);
                            Log.e("MASUK","MASUK3");
                            session.createLoginSession(acc.getUsername(), acc.getId());
                            Log.e("ID MASUK SESSION", String.valueOf(acc.getId()));

                            new SendLogs().execute();

                            Intent intent = new Intent(LogIn.this, Main.class);
                            startActivity(intent);

                            finish();
                        }
                        else{
                            progressDialog.dismiss();
                            Looper.prepare();
                            Log.e("MASUK","MASUK4");
                            MessageQueue queue = Looper.myQueue();
                            queue.addIdleHandler(new MessageQueue.IdleHandler() {
                                int mReqCount = 0;

                                @Override
                                public boolean queueIdle() {
                                    if (++mReqCount == 2) {
                                        // Quit looper
                                        Looper.myLooper().quit();
                                        return false;
                                    } else
                                        return true;
                                }
                            });

                            Toast.makeText(getApplicationContext(), "Invalid Password!", Toast.LENGTH_SHORT).show();
                            Looper.loop();

                        }
                    }
                }
                Log.e("MASUK","MASUK5");
            } catch (Exception e) {
                Log.e("error", String.valueOf(e));
            }
            return null;